/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type TimelineSection = {
  _type: "timelineSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  timeline?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "jobProperties";
  }>;
};

export type SkillSection = {
  _type: "skillSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  skillListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skillList";
  };
};

export type ProjectSection = {
  _type: "projectSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  projectListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectList";
  };
};

export type ProjectList = {
  _id: string;
  _type: "projectList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  projectListName?: string;
  list?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "project";
  }>;
};

export type HeroboxSection = {
  _type: "heroboxSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  prefix?: string;
  tagline?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroboxImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type ContactSection = {
  _type: "contactSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  contactImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type AboutSection = {
  _type: "aboutSection";
  navItemRef?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navItem";
  };
  header?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  aboutImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type Sidebar = {
  _id: string;
  _type: "sidebar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sidebarName?: string;
  profilePic?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  navListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "navList";
  };
  linkListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "linkList";
  };
};

export type NavList = {
  _id: string;
  _type: "navList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  navListName?: string;
  list?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "navItem";
  }>;
};

export type PageBuilder = {
  _id: string;
  _type: "pageBuilder";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  pageContent?: Array<{
    _key: string;
  } & HeroboxSection | {
    _key: string;
  } & SkillSection | {
    _key: string;
  } & TimelineSection | {
    _key: string;
  } & ProjectSection | {
    _key: string;
  } & AboutSection | {
    _key: string;
  } & ContactSection>;
};

export type Skill = {
  _id: string;
  _type: "skill";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  svgIcon?: string;
  skillIcon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  label?: string;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  skillListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skillList";
  };
  linkListProperties?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "linkList";
  };
  modalContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  mainProjectImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type LinkList = {
  _id: string;
  _type: "linkList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  linkListName?: string;
  list?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "link";
  }>;
};

export type SkillList = {
  _id: string;
  _type: "skillList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  skillListName?: string;
  list?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "skill";
  }>;
};

export type NavItem = {
  _id: string;
  _type: "navItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label?: string;
  slug?: Slug;
};

export type Link = {
  _id: string;
  _type: "link";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  svgIcon?: string;
  linkIcon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  label?: string;
  url?: string;
};

export type JobProperties = {
  _id: string;
  _type: "jobProperties";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  dates?: string;
  companyName?: string;
  location?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
}>;

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  publishedAt?: string;
  body?: BlockContent;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type InlineSvg = string;

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | TimelineSection | SkillSection | ProjectSection | ProjectList | HeroboxSection | ContactSection | AboutSection | Sidebar | NavList | PageBuilder | Skill | Project | LinkList | SkillList | NavItem | Link | JobProperties | BlockContent | Post | Category | Author | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug | InlineSvg;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries/exPostQueries.ts
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug.current)][0...12]{  _id, title, slug}
export type POSTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
}>;
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]{  title, body, mainImage}
export type POST_QUERYResult = {
  title: string | null;
  body: BlockContent | null;
  mainImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/portfolioContentQuery.ts
// Variable: PortfolioContentQuery
// Query: *[_type == "pageBuilder"][0]{    title,    pageContent[]{      _type,      header,      navItemRef->{        label,        "slug": slug.current      },      (_type == "heroboxSection")=>{        prefix,        tagline,        heroboxImage{          alt,          "src": asset->url        }      },      (_type == "skillSection")=>{        description,        skillListProperties->{          skillListName,          list[]->{            label,            svgIcon          }        }      },      (_type == "timelineSection")=>{        timeline[]->{          title,          dates,          companyName,          location,          description        }      },      (_type == "projectSection")=>{        projectListProperties->{          projectListName,          list[]->{            title,            subtitle,            description,            skillListProperties->{              skillListName,              list[]->{                label,                svgIcon              }            },            linkListProperties->{              linkListName,              list[]->{                label,                svgIcon,                url              }            },            modalContent,            mainProjectImage{              alt,              "src": asset->url            }          }        }      },      (_type == "aboutSection")=>{        content,        aboutImage{          alt,          "src": asset->url        }      },      (_type == "contactSection")=>{        contactImage{          alt,           "src": asset->url        }      }    }  }
export type PortfolioContentQueryResult = {
  title: string | null;
  pageContent: Array<{
    _type: "aboutSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    aboutImage: {
      alt: string | null;
      src: string | null;
    } | null;
  } | {
    _type: "contactSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    contactImage: {
      alt: string | null;
      src: string | null;
    } | null;
  } | {
    _type: "heroboxSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    prefix: string | null;
    tagline: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    heroboxImage: {
      alt: string | null;
      src: string | null;
    } | null;
  } | {
    _type: "projectSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    projectListProperties: {
      projectListName: string | null;
      list: Array<{
        title: string | null;
        subtitle: string | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        skillListProperties: {
          skillListName: string | null;
          list: Array<{
            label: string | null;
            svgIcon: string | null;
          }> | null;
        } | null;
        linkListProperties: {
          linkListName: string | null;
          list: Array<{
            label: string | null;
            svgIcon: string | null;
            url: string | null;
          }> | null;
        } | null;
        modalContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }> | null;
        mainProjectImage: {
          alt: string | null;
          src: string | null;
        } | null;
      }> | null;
    } | null;
  } | {
    _type: "skillSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    skillListProperties: {
      skillListName: string | null;
      list: Array<{
        label: string | null;
        svgIcon: string | null;
      }> | null;
    } | null;
  } | {
    _type: "timelineSection";
    header: string | null;
    navItemRef: {
      label: string | null;
      slug: string | null;
    } | null;
    timeline: Array<{
      title: string | null;
      dates: string | null;
      companyName: string | null;
      location: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
    }> | null;
  }> | null;
} | null;

// Source: ./src/sanity/lib/queries/sidebarQuery.ts
// Variable: SidebarQuery
// Query: *[_type == "sidebar" && _id == "c94fb9ee-d1af-42fc-9d9c-0f4e791dff0a"]{    "profilePic": {      "url": profilePic.asset->url,      "alt": profilePic.alt    },    navListProperties->{      navListName,      list[]->{        label,        slug      }    },    linkListProperties->{      linkListName,      list[]->{        label,        svgIcon,        url      }    }  }
export type SidebarQueryResult = Array<{
  profilePic: {
    url: string | null;
    alt: string | null;
  };
  navListProperties: {
    navListName: string | null;
    list: Array<{
      label: string | null;
      slug: Slug | null;
    }> | null;
  } | null;
  linkListProperties: {
    linkListName: string | null;
    list: Array<{
      label: string | null;
      svgIcon: string | null;
      url: string | null;
    }> | null;
  } | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"post\" && defined(slug.current)][0...12]{\n  _id, title, slug\n}": POSTS_QUERYResult;
    "*[_type == \"post\" && slug.current == $slug][0]{\n  title, body, mainImage\n}": POST_QUERYResult;
    "\n  *[_type == \"pageBuilder\"][0]{\n    title,\n    pageContent[]{\n      _type,\n      header,\n      navItemRef->{\n        label,\n        \"slug\": slug.current\n      },\n      (_type == \"heroboxSection\")=>{\n        prefix,\n        tagline,\n        heroboxImage{\n          alt,\n          \"src\": asset->url\n        }\n      },\n      (_type == \"skillSection\")=>{\n        description,\n        skillListProperties->{\n          skillListName,\n          list[]->{\n            label,\n            svgIcon\n          }\n        }\n      },\n      (_type == \"timelineSection\")=>{\n        timeline[]->{\n          title,\n          dates,\n          companyName,\n          location,\n          description\n        }\n      },\n      (_type == \"projectSection\")=>{\n        projectListProperties->{\n          projectListName,\n          list[]->{\n            title,\n            subtitle,\n            description,\n            skillListProperties->{\n              skillListName,\n              list[]->{\n                label,\n                svgIcon\n              }\n            },\n            linkListProperties->{\n              linkListName,\n              list[]->{\n                label,\n                svgIcon,\n                url\n              }\n            },\n            modalContent,\n            mainProjectImage{\n              alt,\n              \"src\": asset->url\n            }\n          }\n        }\n      },\n      (_type == \"aboutSection\")=>{\n        content,\n        aboutImage{\n          alt,\n          \"src\": asset->url\n        }\n      },\n      (_type == \"contactSection\")=>{\n        contactImage{\n          alt, \n          \"src\": asset->url\n        }\n      }\n    }\n  }  \n": PortfolioContentQueryResult;
    "\n  *[_type == \"sidebar\" && _id == \"c94fb9ee-d1af-42fc-9d9c-0f4e791dff0a\"]{\n    \"profilePic\": {\n      \"url\": profilePic.asset->url,\n      \"alt\": profilePic.alt\n    },\n    navListProperties->{\n      navListName,\n      list[]->{\n        label,\n        slug\n      }\n    },\n    linkListProperties->{\n      linkListName,\n      list[]->{\n        label,\n        svgIcon,\n        url\n      }\n    }\n  }\n": SidebarQueryResult;
  }
}
